{"version":3,"sources":["core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","Rx","Observable","prototype","this","rxjs_Observable","rxjs_observable_merge","rxjs_operator_share","rxjs_Subject","__extends","d","b","__","constructor","extendStatics","Object","create","makeDecorator","name","props","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","call","annotationInstance","TypeDecorator","cls","hasOwnProperty","ANNOTATIONS","defineProperty","value","push","makeMetadataCtor","ngMetadataName","annotationCls","args","_i","arguments","length","values","apply","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","index","parameters","PARAMETERS","_a","bind","concat","annotation","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","PROP_METADATA","unshift","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","getSymbolIterator","_symbolIterator","Symbol_1","_global","iterator","keys","getOwnPropertyNames","Map","i","key","scheduleMicroTask","fn","Zone","current","looseIdentical","a","isNaN","stringify","token","Array","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","resolveProvider","provider","deps","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE","useValue","useFactory","useExisting","useClass","staticError","multiProviderMixError","recursivelyProcessProviders","records","resolvedProvider","multi","multiProvider","get","MULTI_PROVIDER_FN","set","options","record","tryResolveToken","parent","notFoundValue","resolveToken","e","Error","path","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","undefined","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","j","annotations","Optional","SkipSelf","Self","Inject","formatError","text","obj","source","charAt","substr","context","parts","JSON","replace","NEW_LINE","getDebugContext","error","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","console","wrappedError","message","originalError","msg","findFirstClosedCycle","constructResolvingPath","slice","reverse","k","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","params","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","v","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","ctor","parentProto","getPrototypeOf","resolveReflectiveFactory","factoryFn","resolvedDeps","reflector","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","providers","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","normalizedProvidersMap","existing","id","resolvedFactories","forEach","Type","dependencies","params_1","t","_extractToken","some","p","metadata","optional","isArray","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise","then","isObservable","subscribe","_appIdRandomProviderFactory","_randomChar","String","fromCharCode","Math","floor","random","_throwError","noComponentFactoryError","component","ERROR_COMPONENT","detectWTF","wtf","trace","events","createScope","flags","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","noop","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","destroyPlatform","destroy","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","result","catch","optionsReducer","dst","objs","reduce","__assign","remove","list","el","splice","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","flatten","flat","item","flatItem","checkNotEmpty","modulePath","exportName","asNativeElements","debugEls","nativeElement","_queryElementChildren","element","predicate","matches","childNodes","node","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","o","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","shiftInitState","view","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","err","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","unwrapValue","nodeIdx","bindingIdx","WrappedValue","wrapped","globalBindingIdx","def","bindingIndex","oldValues","createRendererType2","UNDEFINED_RENDERER_TYPE_ID","styles","encapsulation","data","resolveRendererType2","isFilled","ViewEncapsulation","None","_renderCompCount","EMPTY_RENDERER_TYPE_ID","checkBinding","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","componentView","handleEvent","root","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","SOURCE","configurable","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","match","NS_PREFIX_RE","calcBindingFlags","bindings","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","anchorDef","templateFactory","outputIndex","checkIndex","childFlags","directChildFlags","childMatchedQueries","outputs","ns","attrs","template","componentProvider","publicProviders","allProviders","query","ngContent","elementDef","namespaceAndName","fixedAttrs","_b","bindingDefs","_c","namespaceAndName_1","suffixOrSecurityContext","_d","ns_1","name_1","securityContext","suffix","nonMinifiedName","outputDefs","_e","createElement","elDef","rootSelectorOrNode","selectorOrNode","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext","STYLE","unit","setStyle","removeStyle","setProperty","moduleProvideDef","moduleDef","providersByKey","initNgModule","_def","provDef","_createProviderInstance$1","resolveNgModuleDep","depDef","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providerDef","providerInstance","UNDEFINED_VALUE","ngModule","injectable","_createClass","_callFactory","len","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","arr","pop","createComponentFactory","selector","componentType","viewDefFactory","inputs","ngContentSelectors","ComponentFactory_","getComponentViewDefinitionFactory","componentFactory","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","nodeValue","createRendererV1","RendererAdapter","createNgModuleRef","bootstrapComponents","NgModuleRef_","directiveDef","prop","pipeDef","depDefs","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","directive","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","createQuery","QueryList","queryIds","nodeMatchedQueries","tplDef","end","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","calcQueryValues","reset","notify","boundValue","notifyOnChanges","getQueryValue","embeddedView","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","createPureExpression","checkAndUpdatePureExpressionInline","pipe","transform","checkAndUpdatePureExpressionDynamic","textDef","staticText","prefix","createText","checkAndUpdateTextInline","_addInterpolationPart","setValue","checkAndUpdateTextDynamic","updateDirectives","updateRenderer","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","validateNode","isPrivateService","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","disposables","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","checkAndUpdateView","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","overrideComponentView","clearOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","viewDef$$1","viewDefOverrides","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","comp","compFactory","hostViewDef","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","has","elIndex","hasOverrides","hasDeprecatedOverrides","deprecatedBehavior","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","camelCaseToDashCase","input","CAMEL_CASE_REGEXP","m","toLowerCase","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","stringifyValueForError","assertEqual","actual","expected","serializer","assertThrow","assertLessThan","assertNotNull","assertNotEqual","operator","assertNodeType","typeSerializer","findNativeParent","containerNode","container","ngDevMode","native","viewOrElement","findBeforeNode","views","addRemoveViewFromContainer","rootNode","insertMode","beforeNode","child","nextNode","isFnRenderer","childContainerData","destroyViewTree","rootView","viewOrContainerState","cleanUpView","getParentState","insertView","newView","setViewNext","nextIndex","removeView","removeIndex","viewNode","cleanup","removeEventListener","currentView","insertChild","sibling","nativeSibling","isDifferent","stringify$1","enterView","newViewState","host","oldViewState","bindingStartIndex","ngStaticData","creationMode","viewHookStartIndex","previousOrParentNode","isParent","leaveView","executeViewHooks","createViewState","viewId","tail","createLNode","currentQuery","isState","nodeInjector","staticData","resetApplicationState","renderComponentOrTemplate","componentOrContext","begin","ngComponentDef","r","elementStart","nameOrComponentDef","localName","node_1","isHostElement","tag","ngStaticData_1","getTemplateStatic","addToViewTree","assertDataInRange","createNodeStatic","setUpAttributes","isProceduralRenderer","createError","locateHostElement","elementOrSelector","defaultRenderer","rNode","elementEnd","assertHasParent","addNode","elementProperty","NO_CHANGE","generatePropertyAliases","dataValue","inputData","setInputsForProperty","tagName","containerStatic","localNames","initialInputs","isInputData","start","propertyAliasMap","publicName","internalName","staticDirData","hasProperty","elementStyle","styleName","lElement","RendererStyleFlags3","DashCase","style","removeProperty","textNode","textBinding","existingNode","textContent","assertPreviousIsParent","NG_HOST_SYMBOL","enumerable","nodeStaticData","diPublic_1","diPublic","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","attrName","minifiedInputName","writeIndex","containerStart","comment","containerEnd","containerRefreshStart","containerRefreshEnd","viewStart","viewBlockId","containerState","existingView","viewUpdateMode","initViewStaticData","viewEnd","previousView","different","bind1","renderComponent","opts","domRendererFactory3","componentDef","hostNode","n","features","feature","isDirty","defineComponent","componentDefinition","refresh","componentRefresh","h","hostBindings","noop$1","invertObject","methods","EMPTY$1","newObj","minifiedKey","trigger$1","definitions","animate$1","timings","group$1","steps","sequence$1","style$1","tokens","offset","state$1","keyframes$1","transition$1","stateChangeExpr","expr","animation","trigger$$1","animate$$1","group$$1","sequence$$1","style$$1","state$$1","keyframes$$1","transition$$1","setPrototypeOf","__proto__","assign","s","_desc","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","OnPush","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","Directive","dir","Component","c","changeDetection","Pipe","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","Emulated","Version","full","major","split","minor","patch","VERSION","Injectable","Host","__window","window","__self","WorkerGlobalScope","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME","ɵ2","objWithPropertyToExtract","_records","tokenPath","_console","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","Function","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","decorators","getOwnMetadata","fill","_ownAnnotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","setter","method","functionBody","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","resolvedFactory","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","stack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","Promise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","ComponentFactoryBoundToModule","_super","NgModuleRef","NgModuleFactory","wtfEnabled","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","setTimeout","Subject","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","NgProbeToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","moduleRef","exceptionHandler","onDestroy","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","listener","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","observer","stableSub","unstableSub","merge","share","componentOrFactory","compRef","_unloadComponent","location","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererStyleFlags2","Important","Renderer2","NgModuleFactoryLoader","_results","filter","find","toArray","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","loadFactory","loadAndCompile","System","import","factoryClassSuffix","TemplateRef","ViewContainerRef","ChangeDetectorRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","_debugContext","addChild","listeners","providerTokens","attributes","classes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","ValueUnwrapper","hasWrappedValue","unwrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","ApplicationModule","NONE","HTML","SCRIPT","URL","RESOURCE_URL","DebugContext","WeakMap","EMPTY_ARRAY","EMPTY_MAP","EMPTY_CONTEXT","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs","reattach","vcRef","_parentView","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","_ngModuleDefFactory","QueryList_","_valuesTree","_values","_refresh","document","elementIndex","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵValueUnwrapper","ɵdevModeEqual","ɵisListLikeIterable","ɵChangeDetectorStatus","ɵisDefaultChangeDetectionStrategy","ɵConsole","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdefineComponent","ɵdetectChanges","ɵrenderComponent","ɵC","ɵD","ɵE","ɵT","ɵV","ɵb","ɵb1","ɵc","ɵcR","ɵcr","ɵe","ɵp","ɵs","ɵt","ɵv","ɵregisterModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","ɵccf","ɵcmf","ɵcrt","ɵdid","ɵeld","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","ɵinterpolate","ɵmod","ɵmpd","ɵncd","ɵnov","ɵpid","ɵprd","ɵpad","ɵpod","ɵppd","ɵqud","ɵted","ɵunv","ɵvid","AUTO_STYLE","trigger","group","sequence","keyframes","transition","ɵbe","ɵbf","ɵbj","ɵbg","ɵbi","ɵbh","ɵbk","ɵbd","ɵm","ɵn","ɵo","ɵh","ɵi","ɵj","ɵk","ɵl","ɵd","ɵf","ɵg","ɵq","ɵu","ɵr","ɵy","ɵw","ɵx","ɵbb","ɵa","ɵz","ɵba"],"mappings":"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","file":"core.umd.min.js","sourcesContent":["/**\n * @license Angular v5.2.0\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Observable'), require('rxjs/observable/merge'), require('rxjs/operator/share'), require('rxjs/Subject')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs/Observable', 'rxjs/observable/merge', 'rxjs/operator/share', 'rxjs/Subject'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx));\n}(this, (function (exports,rxjs_Observable,rxjs_observable_merge,rxjs_operator_share,rxjs_Subject) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.2.0\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new ((_a = (/** @type {?} */ (PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {\\@link ContentChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {\\@link ViewChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {\\@link ViewChild}\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n       * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n       * `CheckOnce` means that after calling detectChanges the mode of the change detector\n       * will become `Checked`.\n       */\n    CheckOnce: 0,\n    /**\n       * `Checked` means that the change detector should be skipped until its mode changes to\n       * `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * `CheckAlways` means that after calling detectChanges the mode of the change detector\n       * will remain `CheckAlways`.\n       */\n    CheckAlways: 2,\n    /**\n       * `Detached` means that the change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * `Errored` means that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state will no longer detect changes.\n       */\n    Errored: 4,\n    /**\n       * `Destroyed` means that the change detector is destroyed.\n       */\n    Destroyed: 5,\n};\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the Input decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a module that also includes the providers.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Interface for schema definitions in \\@NgModules.\n *\n * \\@experimental\n * @record\n */\n\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.2.0');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = /** @class */ (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @param {?=} source\n * @return {?}\n */\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return {}; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var /** @type {?} */ i = 0; i < factories.length; i++) {\n            var /** @type {?} */ factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(rxjs_Subject.Subject));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ desc = \"Platform: \" + name;\n    var /** @type {?} */ marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var /** @type {?} */ injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        var /** @type {?} */ providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new rxjs_Observable.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new rxjs_Observable.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            rxjs_observable_merge.merge(isCurrentlyStable, rxjs_operator_share.share.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    var /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    var /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n        (/** @type {?} */ (this)).length = this._results.length;\n        (/** @type {?} */ (this)).last = this._results[this.length - 1];\n        (/** @type {?} */ (this)).first = this._results[0];\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler, },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {\\@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Helper class for unwrapping WrappedValue s\n */\nvar ValueUnwrapper = /** @class */ (function () {\n    function ValueUnwrapper() {\n        this.hasWrappedValue = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.unwrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (value instanceof WrappedValue) {\n            this.hasWrappedValue = true;\n            return value.wrapped;\n        }\n        return value;\n    };\n    /**\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.reset = /**\n     * @return {?}\n     */\n    function () { this.hasWrappedValue = false; };\n    return ValueUnwrapper;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */\n                ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the {\\@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {\\@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @param {?} view\n * @param {?} priorInitState\n * @param {?} newInitState\n * @return {?}\n */\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var /** @type {?} */ state = view.state;\n    var /** @type {?} */ initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n/**\n * @param {?} view\n * @param {?} initState\n * @param {?} index\n * @return {?}\n */\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar DebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    overrideComponentView: /** @type {?} */ ((undefined)),\n    clearOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (value instanceof WrappedValue) {\n        value = value.wrapped;\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @param {?=} sourceName\n * @return {?}\n */\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY = [];\nvar EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = /** @type {?} */ ((null));\n    var /** @type {?} */ name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = /** @type {?} */ ((undefined));\n        var /** @type {?} */ suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = /** @type {?} */ (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    var /** @type {?} */ providersByKey = {};\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(view, providerDef_1) };\n                            view.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    var /** @type {?} */ initIndex = 0;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var /** @type {?} */ keys = Object.keys(propToIndex);\n    var /** @type {?} */ nbKeys = keys.length;\n    var /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (var /** @type {?} */ i = 0; i < nbKeys; i++) {\n        var /** @type {?} */ key = keys[i];\n        var /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var /** @type {?} */ bindings = new Array(staticText.length - 1);\n    for (var /** @type {?} */ i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentRenderParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var /** @type {?} */ newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { return ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var /** @type {?} */ callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ overrideComponentView = viewDefOverrides.get(/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentProvider)).provider)).token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar viewDefOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @param {?} comp\n * @param {?} compFactory\n * @return {?}\n */\nfunction debugOverrideComponentView(comp, compFactory) {\n    var /** @type {?} */ hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((hostViewDef.nodes[0].element)).componentView)));\n    viewDefOverrides.set(comp, compViewDef);\n}\n/**\n * @return {?}\n */\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    viewDefOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        var /** @type {?} */ hasOverrides = false;\n        var /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @param {?} comp\n * @param {?} componentFactory\n * @return {?}\n */\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\n/**\n * @return {?}\n */\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n/**\n * Stringifies values such that strings are wrapped in explicit quotation marks and\n * other types are stringified normally. Used in error messages (e.g. assertThrow)\n * to make it clear that certain values are of the string type when comparing.\n *\n * e.g. `expected \"3\" to be 3` is easier to understand than `expected 3 to be 3`.\n *\n * @param {?} value The value to be stringified\n * @return {?} The stringified value\n */\nfunction stringifyValueForError(value) {\n    return typeof value === 'string' ? \"\\\"\" + value + \"\\\"\" : '' + value;\n}\n/**\n * @param {?} actual\n * @param {?} name\n * @return {?}\n */\n\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} name\n * @param {?=} serializer\n * @return {?}\n */\nfunction assertEqual(actual, expected, name, serializer) {\n    (actual != expected) && assertThrow(actual, expected, name, '==', serializer);\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} name\n * @return {?}\n */\nfunction assertLessThan(actual, expected, name) {\n    (actual < expected) && assertThrow(actual, expected, name, '>');\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} name\n * @return {?}\n */\nfunction assertNotNull(actual, name) {\n    assertNotEqual(actual, null, name);\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} name\n * @return {?}\n */\nfunction assertNotEqual(actual, expected, name) {\n    (actual == expected) && assertThrow(actual, expected, name, '!=');\n}\n/**\n * Throws an error with a message constructed from the arguments.\n *\n * @template T\n * @param {?} actual The actual value (e.g. 3)\n * @param {?} expected The expected value (e.g. 5)\n * @param {?} name The name of the value being checked (e.g. attrs.length)\n * @param {?} operator The comparison operator (e.g. <, >, ==)\n * @param {?=} serializer Function that maps a value to its display value\n * @return {?}\n */\nfunction assertThrow(actual, expected, name, operator, serializer) {\n    if (serializer === void 0) { serializer = stringifyValueForError; }\n    throw new Error(\"ASSERT: expected \" + name + \" \" + operator + \" \" + serializer(expected) + \" but was \" + serializer(actual) + \"!\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nif (typeof ngDevMode == 'undefined') {\n    if (typeof window != 'undefined')\n        (/** @type {?} */ (window)).ngDevMode = true;\n    if (typeof self != 'undefined')\n        (/** @type {?} */ (self)).ngDevMode = true;\n    if (typeof global != 'undefined')\n        (/** @type {?} */ (global)).ngDevMode = true;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} node\n * @param {?} type\n * @return {?}\n */\nfunction assertNodeType(node, type) {\n    assertNotEqual(node, null, 'node');\n    assertEqual(node.flags & 3 /* TYPE_MASK */, type, 'Node.type', typeSerializer);\n}\n/**\n * @param {?} node\n * @param {...?} types\n * @return {?}\n */\n\n/**\n * @param {?} type\n * @return {?}\n */\nfunction typeSerializer(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '??? ' + type + ' ???';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Finds the closest DOM node above a given container in the hierarchy.\n *\n * This is necessary to add or remove elements from the DOM when a view\n * is added or removed from the container. e.g. parent.removeChild(...)\n *\n * @param {?} containerNode The container node whose parent must be found\n * @return {?} Closest DOM node above the container\n */\nfunction findNativeParent(containerNode) {\n    var /** @type {?} */ container = containerNode;\n    while (container) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var /** @type {?} */ renderParent = container.data.renderParent;\n        if (renderParent !== null) {\n            return renderParent.native;\n        }\n        var /** @type {?} */ viewOrElement = /** @type {?} */ ((container.parent));\n        ngDevMode && assertNotNull(viewOrElement, 'container.parent');\n        if ((viewOrElement.flags & 3 /* TYPE_MASK */) === 3 /* Element */) {\n            // we are an LElement, which means we are past the last LContainer.\n            // This means than we have not been projected so just ignore.\n            return null;\n        }\n        ngDevMode && assertNodeType(viewOrElement, 2 /* View */);\n        container = (/** @type {?} */ (viewOrElement)).parent;\n    }\n    return null;\n}\n/**\n * Finds the DOM element before which a certain view should be inserting its\n * child elements.\n *\n * If the view has a next (e.g. for loop), elements should be inserted before\n * the next view's first child element. Otherwise, the container's comment\n * anchor is the marker.\n *\n * @param {?} index The index of the view to check\n * @param {?} state ContainerState of the parent container\n * @param {?} native Comment anchor for container\n * @return {?} The DOM element for which the view should insert elements\n */\nfunction findBeforeNode(index, state, native) {\n    var /** @type {?} */ views = state.views;\n    // Find the node to insert in front of\n    return index + 1 < views.length ?\n        (/** @type {?} */ (views[index + 1].child)).native :\n        native;\n}\n/**\n * @param {?} container\n * @param {?} rootNode\n * @param {?} insertMode\n * @param {?=} beforeNode\n * @return {?}\n */\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    var /** @type {?} */ parent = findNativeParent(container);\n    var /** @type {?} */ node = rootNode.child;\n    if (parent) {\n        while (node) {\n            var /** @type {?} */ type = node.flags & 3;\n            var /** @type {?} */ nextNode = null;\n            var /** @type {?} */ renderer = container.view.renderer;\n            var /** @type {?} */ isFnRenderer = (/** @type {?} */ (renderer)).listen;\n            if (type === 3 /* Element */) {\n                insertMode ? (isFnRenderer ? /** @type {?} */ (((/** @type {?} */ (renderer))\n                    .insertBefore))(parent, /** @type {?} */ ((node.native)), /** @type {?} */ (beforeNode)) :\n                    parent.insertBefore(/** @type {?} */ ((node.native)), /** @type {?} */ (beforeNode), true)) :\n                    (isFnRenderer ? /** @type {?} */ (((/** @type {?} */ (renderer))\n                        .removeChild))(/** @type {?} */ (parent), /** @type {?} */ ((node.native))) :\n                        parent.removeChild(/** @type {?} */ ((node.native))));\n                nextNode = node.next;\n            }\n            else if (type === 0 /* Container */) {\n                // if we get to a container, it must be a root node of a view because we are only\n                // propagating down into child views / containers and not child elements\n                var /** @type {?} */ childContainerData = (/** @type {?} */ (node)).data;\n                insertMode ? (isFnRenderer ? /** @type {?} */ (((/** @type {?} */ (renderer))\n                    .appendChild))(/** @type {?} */ (parent), /** @type {?} */ ((node.native))) :\n                    parent.appendChild(/** @type {?} */ ((node.native)))) :\n                    (isFnRenderer ? /** @type {?} */ (((/** @type {?} */ (renderer))\n                        .removeChild))(/** @type {?} */ (parent), /** @type {?} */ ((node.native))) :\n                        parent.removeChild(/** @type {?} */ ((node.native))));\n                nextNode = childContainerData.views.length ? childContainerData.views[0].child : null;\n            }\n            else if (type === 1 /* Projection */) {\n                nextNode = (/** @type {?} */ (node)).data[0];\n            }\n            else {\n                nextNode = (/** @type {?} */ (node)).child;\n            }\n            if (nextNode === null) {\n                while (node && !node.next) {\n                    node = node.parent;\n                    if (node === rootNode)\n                        node = null;\n                }\n                node = node && node.next;\n            }\n            else {\n                node = nextNode;\n            }\n        }\n    }\n}\n/**\n * Traverses the tree of component views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  \\@param rootView The view to destroy\n * @param {?} rootView\n * @return {?}\n */\nfunction destroyViewTree(rootView) {\n    var /** @type {?} */ viewOrContainerState = rootView;\n    while (viewOrContainerState) {\n        var /** @type {?} */ next = null;\n        if (viewOrContainerState.views && viewOrContainerState.views.length) {\n            next = viewOrContainerState.views[0].data;\n        }\n        else if (viewOrContainerState.child) {\n            next = viewOrContainerState.child;\n        }\n        else if (viewOrContainerState.next) {\n            cleanUpView(/** @type {?} */ (viewOrContainerState));\n            next = viewOrContainerState.next;\n        }\n        if (next == null) {\n            while (viewOrContainerState && !/** @type {?} */ ((viewOrContainerState)).next) {\n                cleanUpView(/** @type {?} */ (viewOrContainerState));\n                viewOrContainerState = getParentState(viewOrContainerState, rootView);\n            }\n            cleanUpView(/** @type {?} */ (viewOrContainerState) || rootView);\n            next = viewOrContainerState && viewOrContainerState.next;\n        }\n        viewOrContainerState = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param {?} container The container into which the view should be inserted\n * @param {?} newView The view to insert\n * @param {?} index The index at which to insert the view\n * @return {?} The inserted view\n */\nfunction insertView(container, newView, index) {\n    var /** @type {?} */ state = container.data;\n    var /** @type {?} */ views = state.views;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        setViewNext(views[index - 1], newView);\n    }\n    if (index < views.length && views[index].data.id !== newView.data.id) {\n        // View ID change replace the view.\n        setViewNext(newView, views[index]);\n        views.splice(index, 0, newView);\n    }\n    else if (index >= views.length) {\n        views.push(newView);\n    }\n    if (state.nextIndex <= index) {\n        state.nextIndex++;\n    }\n    // If the container's renderParent is null, we know that it is a root node of its own parent view\n    // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n    // nodes twice - once now and once when its parent inserts its views).\n    if (container.data.renderParent !== null) {\n        addRemoveViewFromContainer(container, newView, true, findBeforeNode(index, state, container.native));\n    }\n    // Notify query that view has been inserted\n    container.query && container.query.insertView(container, newView, index);\n    return newView;\n}\n/**\n * Removes a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM and conducts cleanup (e.g. removing\n * listeners, calling onDestroys).\n *\n * @param {?} container The container from which to remove a view\n * @param {?} removeIndex The index of the view to remove\n * @return {?} The removed view\n */\nfunction removeView(container, removeIndex) {\n    var /** @type {?} */ views = container.data.views;\n    var /** @type {?} */ viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        setViewNext(views[removeIndex - 1], viewNode.next);\n    }\n    views.splice(removeIndex, 1);\n    destroyViewTree(viewNode.data);\n    addRemoveViewFromContainer(container, viewNode, false);\n    // Notify query that view has been removed\n    container.query && container.query.removeView(container, viewNode, removeIndex);\n    return viewNode;\n}\n/**\n * Sets a next on the view node, so views in for loops can easily jump from\n * one view to the next to add/remove elements. Also adds the ViewState (view.data)\n * to the view tree for easy traversal when cleaning up the view.\n *\n * @param {?} view The view to set up\n * @param {?} next The view's new next\n * @return {?}\n */\nfunction setViewNext(view, next) {\n    view.next = next;\n    view.data.next = next ? next.data : null;\n}\n/**\n * Determines which ViewOrContainerState to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent ViewState should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * ViewState's parent) needs to be checked for a possible next property.\n *\n * @param {?} state The ViewOrContainerState for which we need a parent state\n * @param {?} rootView The rootView, so we don't propagate too far up the view tree\n * @return {?} The correct parent ViewOrContainerState\n */\nfunction getParentState(state, rootView) {\n    var /** @type {?} */ node;\n    if ((node = /** @type {?} */ (((/** @type {?} */ (state)))).node) &&\n        (node.flags & 3 /* TYPE_MASK */) === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return /** @type {?} */ (((node.parent)).data);\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state.parent === rootView ? null : state.parent;\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param {?} viewState The ViewState of the view to clean up\n * @return {?}\n */\nfunction cleanUpView(viewState) {\n    if (!viewState.cleanup)\n        return;\n    var /** @type {?} */ cleanup = /** @type {?} */ ((viewState.cleanup));\n    for (var /** @type {?} */ i = 0; i < cleanup.length - 1; i += 2) {\n        if (typeof cleanup[i] === 'string') {\n            /** @type {?} */ ((cleanup))[i + 1].removeEventListener(cleanup[i], cleanup[i + 2], cleanup[i + 3]);\n            i += 2;\n        }\n        else {\n            cleanup[i].call(cleanup[i + 1]);\n        }\n    }\n    viewState.cleanup = null;\n}\n/**\n * Appends the provided child element to the provided parent, if appropriate.\n *\n * If the parent is a view, the element will be appended as part of viewEnd(), so\n * the element should not be appended now. Similarly, if the child is a content child\n * of a parent component, the child will be appended to the right position later by\n * the content projection system. Otherwise, append normally.\n *\n * @param {?} parent The parent to which to append the child\n * @param {?} child The child that should be appended\n * @param {?} currentView The current view's ViewState\n * @return {?} Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    // Only add native child element to parent element if the parent element is regular Element.\n    // If parent is:\n    // - Regular element => add child\n    // - Component host element =>\n    //    - Current View, and parent view same => content => don't add -> parent component will\n    //    re-project if needed.\n    //    - Current View, and parent view different => view => add Child\n    // - View element => View's get added separately.\n    if (child !== null && (parent.flags & 3 /* TYPE_MASK */) === 3 /* Element */ &&\n        (parent.view !==\n            currentView /* Crossing View Boundaries, it is Component, but add Element of View */\n            || parent.data === null /* Regular Element. */)) {\n        // We only add element if not in View or not projected.\n        var /** @type {?} */ renderer = currentView.renderer;\n        (/** @type {?} */ (renderer)).listen ? /** @type {?} */ (((/** @type {?} */ (renderer)).appendChild))(/** @type {?} */ (((parent.native))), child) : /** @type {?} */ ((parent.native)).appendChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Inserts the provided node before the correct element in the DOM, if appropriate.\n *\n * If the parent is a view, the element will be inserted as part of viewEnd(), so\n * the element should not be inserted now. Similarly, if the child is a content child\n * of a parent component, the child will be inserted to the right position later by\n * the content projection system. Otherwise, insertBefore normally.\n *\n * @param {?} node Node to insert\n * @param {?} currentView The current view's ViewState\n * @return {?}\n */\nfunction insertChild(node, currentView) {\n    var /** @type {?} */ parent = /** @type {?} */ ((node.parent));\n    // Only add child element to parent element if the parent element is regular Element.\n    // If parent is:\n    // - Normal element => add child\n    // - Component element =>\n    //    - Current View, and parent view same => content don't add -> parent component will\n    //    re-project if needed.\n    //    - Current View, and parent view different => view => add Child\n    // - View element => View's get added separately.\n    if ((parent.flags & 3 /* TYPE_MASK */) === 3 /* Element */ &&\n        (parent.view !==\n            currentView /* Crossing View Boundaries, its Component, but add Element of View */\n            || parent.data === null /* Regular Element. */)) {\n        // We only add element if not in View or not projected.\n        var /** @type {?} */ sibling = node.next;\n        var /** @type {?} */ nativeSibling = null;\n        while (sibling && (nativeSibling = sibling.native) === null) {\n            sibling = sibling.next;\n        }\n        var /** @type {?} */ renderer = currentView.renderer;\n        (/** @type {?} */ (renderer)).listen ? /** @type {?} */ (((/** @type {?} */ (renderer))\n            .insertBefore))(/** @type {?} */ ((parent.native)), /** @type {?} */ ((node.native)), nativeSibling) : /** @type {?} */ ((parent.native)).insertBefore(/** @type {?} */ ((node.native)), nativeSibling, false);\n    }\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM. Also stores the\n * node in the given projectedNodes array.\n *\n * @param {?} projectedNodes Array to store the projected node\n * @param {?} node The node to process\n * @param {?} currentParent The last parent element to be processed\n * @param {?} currentView The current view's ViewState\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param {?} lNodeStaticData\n * @param {?} selector\n * @return {?} true if node matches the selector.\n */\n\n/**\n * @param {?} lNodeStaticData\n * @param {?} selector\n * @return {?}\n */\n\n/**\n * @param {?} lNodeStaticData\n * @param {?} selector\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Must use this method for CD (instead of === ) since NaN !== NaN\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param {?} di The node injector where we should store a created ElementRef\n * @return {?} The ElementRef instance to use\n */\n\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @param {?} di The node injector where we should store a created TemplateRef\n * @return {?} The TemplateRef instance to use\n */\n\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @param {?} di\n * @return {?} The ViewContainerRef instance to use\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * @record\n */\n\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = false;\n        /**\n         * \\@internal\n         */\n        this._valuesTree = null;\n        /**\n         * \\@internal\n         */\n        this._values = null;\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            ngDevMode && assertNotNull(this._values, 'refreshed');\n            return /** @type {?} */ ((this._values)).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            ngDevMode && assertNotNull(this._values, 'refreshed');\n            var /** @type {?} */ values = /** @type {?} */ ((this._values));\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            ngDevMode && assertNotNull(this._values, 'refreshed');\n            var /** @type {?} */ values = /** @type {?} */ ((this._values));\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    QueryList_.prototype._refresh = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(misko): needs more logic to flatten tree.\n        if (this._values === null) {\n            this._values = this._valuesTree;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.map = /**\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.filter = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.find = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList_.prototype.reduce = /**\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.forEach = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList_.prototype.some = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toArray = /**\n     * @return {?}\n     */\n    function () {\n        ngDevMode && assertNotNull(this._values, 'refreshed');\n        return /** @type {?} */ ((this._values));\n    };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { throw new Error('Method not implemented.'); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList_.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) { throw new Error('Method not implemented.'); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { throw new Error('Method not implemented.'); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.setDirty = /**\n     * @return {?}\n     */\n    function () { throw new Error('Method not implemented.'); };\n    /**\n     * @return {?}\n     */\n    QueryList_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { throw new Error('Method not implemented.'); };\n    return QueryList_;\n}());\n\n/**\n * @param {?} query\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar RendererStyleFlags3 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags3[RendererStyleFlags3.Important] = \"Important\";\nRendererStyleFlags3[RendererStyleFlags3.DashCase] = \"DashCase\";\n/**\n * Object Oriented style of API needed to create elements and text nodes.\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade\n * (reducing payload size).\n *\n * @record\n */\n\n/**\n * Procedural style of API needed to create elements and text nodes.\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the\n * facade that enables element manipulation. This also facilitates backwards compatibility\n * with Renderer2.\n * @record\n */\n\n/**\n * @record\n */\n\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n/**\n * Subset of API needed for appending elements and text nodes.\n * @record\n */\n\n/**\n * Subset of API needed for writing attributes, properties, and setting up\n * listeners on Element.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nvar NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar renderer;\nvar rendererFactory;\n/**\n * Used to set the parent property when nodes are created.\n */\nvar previousOrParentNode;\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar isParent;\n/**\n * The current template's static data (shared between all templates of a\n * given type).\n *\n * Each node's static data is stored at the same index that it's stored\n * in the data array. Any nodes that do not have static data store a null\n * value to avoid a sparse array.\n */\nvar ngStaticData;\n/**\n * State of the current view being processed.\n */\nvar currentView;\n// The initialization has to be after the `let`, otherwise `createViewState` can't see `let`.\ncurrentView = createViewState(/** @type {?} */ ((null)), /** @type {?} */ ((null)), []);\nvar currentQuery;\n/**\n * This property gets set before entering a template.\n */\nvar creationMode;\n/**\n * An array of nodes (text, element, container, etc), their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar data;\n/**\n * Points to the next binding index to read or write to.\n */\nvar bindingIndex;\n/**\n * When a view is destroyed, listeners need to be released\n * and onDestroy callbacks need to be called. This cleanup array\n * stores both listener data (in chunks of 4) and onDestroy data\n * (in chunks of 2), as they'll be processed at the same time.\n *\n * If it's a listener being stored:\n * 1st index is: event name to remove\n * 2nd index is: native element\n * 3rd index is: listener function\n * 4th index is: useCapture boolean\n *\n * If it's an onDestroy function:\n * 1st index is: onDestroy function\n * 2nd index is: context for function\n */\nvar cleanup;\n/**\n * Index in the data array at which view hooks begin to be stored.\n */\nvar viewHookStartIndex;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param {?} newViewState New state to become active\n * @param {?} host Element to which the View is a child of\n * @return {?} the previous state;\n */\nfunction enterView(newViewState, host) {\n    var /** @type {?} */ oldViewState = currentView;\n    data = newViewState.data;\n    bindingIndex = newViewState.bindingStartIndex || 0;\n    ngStaticData = newViewState.ngStaticData;\n    creationMode = newViewState.creationMode;\n    viewHookStartIndex = newViewState.viewHookStartIndex;\n    cleanup = newViewState.cleanup;\n    renderer = newViewState.renderer;\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    currentView = newViewState;\n    return /** @type {?} */ ((oldViewState));\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n * @param {?} newViewState\n * @return {?}\n */\nfunction leaveView(newViewState) {\n    executeViewHooks();\n    enterView(newViewState, null);\n}\n/**\n * @param {?} viewId\n * @param {?} renderer\n * @param {?} ngStaticData\n * @return {?}\n */\nfunction createViewState(viewId, renderer, ngStaticData) {\n    var /** @type {?} */ newView = {\n        parent: currentView,\n        id: viewId,\n        // -1 for component views\n        node: /** @type {?} */ ((null)),\n        // until we initialize it in createNode.\n        data: [],\n        ngStaticData: ngStaticData,\n        cleanup: null,\n        renderer: renderer,\n        child: null,\n        tail: null,\n        next: null,\n        bindingStartIndex: null,\n        creationMode: true,\n        viewHookStartIndex: null\n    };\n    return newView;\n}\n/**\n * @param {?} index\n * @param {?} type\n * @param {?} native\n * @param {?=} state\n * @return {?}\n */\nfunction createLNode(index, type, native, state) {\n    var /** @type {?} */ parent = isParent ? previousOrParentNode :\n        previousOrParentNode && /** @type {?} */ (previousOrParentNode.parent);\n    var /** @type {?} */ query = (isParent ? currentQuery : previousOrParentNode && previousOrParentNode.query) ||\n        parent && parent.query && parent.query.child();\n    var /** @type {?} */ isState = state != null;\n    var /** @type {?} */ node = {\n        flags: type,\n        native: /** @type {?} */ (native),\n        view: currentView,\n        parent: /** @type {?} */ (parent),\n        child: null,\n        next: null,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: isState ? /** @type {?} */ (state) : null,\n        query: query,\n        staticData: null\n    };\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        // Bit of a hack to bust through the readonly because there is a circular dep between\n        // ViewState and LNode.\n        ngDevMode && assertEqual((/** @type {?} */ (state)).node, null, 'viewState.node');\n        (/** @type {?} */ ((state))).node = node;\n    }\n    if (index != null) {\n        // We are Element or Container\n        ngDevMode && assertEqual(data.length, index, 'data.length not in sequence');\n        data[index] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (index >= ngStaticData.length) {\n            ngStaticData[index] = null;\n        }\n        else {\n            node.staticData = /** @type {?} */ (ngStaticData[index]);\n        }\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQuery = null;\n            if (previousOrParentNode.view === currentView ||\n                (previousOrParentNode.flags & 3 /* TYPE_MASK */) === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                ngDevMode && assertEqual(previousOrParentNode.child, null, 'previousNode.child');\n                previousOrParentNode.child = node;\n            }\n            else {\n                // We are adding component view, so we don't link parent node child to this node.\n            }\n        }\n        else if (previousOrParentNode) {\n            ngDevMode && assertEqual(previousOrParentNode.next, null, 'previousNode.next');\n            previousOrParentNode.next = node;\n        }\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n/**\n * Resets the application state.\n * @return {?}\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = /** @type {?} */ ((null));\n}\n/**\n *\n * @template T\n * @param {?} hostNode\n * @param {?} template Template function with the instructions.\n * @param {?} context to pass into the template.\n * @param {?} providedRendererFactory\n * @param {?} host Existing node to render into.\n * @return {?}\n */\n\n/**\n * @template T\n * @param {?} node\n * @param {?} viewState\n * @param {?} componentOrContext\n * @param {?=} template\n * @return {?}\n */\nfunction renderComponentOrTemplate(node, viewState, componentOrContext, template) {\n    var /** @type {?} */ oldView = enterView(viewState, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            ngStaticData = template.ngStaticData || (template.ngStaticData = /** @type {?} */ ([]));\n            template(/** @type {?} */ ((componentOrContext)), creationMode);\n        }\n        else {\n            // Element was stored at 0 and directive was stored at 1 in renderComponent\n            // so to refresh the component, r() needs to be called with (1, 0)\n            (/** @type {?} */ (componentOrContext.constructor)).ngComponentDef.r(1, 0);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        viewState.creationMode = false;\n        leaveView(oldView);\n    }\n}\n/**\n * @return {?}\n */\n\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\n\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * Usage example (in factory function):\n *\n * class SomeDirective {\n *   constructor(directive: DirectiveA) {}\n *\n *   static ngDirectiveDef = defineDirective({\n *     type: SomeDirective,\n *     factory: () => new SomeDirective(inject(DirectiveA))\n *   });\n * }\n *\n * @template T\n * @param {?} token The directive type to search for\n * @param {?=} flags Injection flags (e.g. CheckParent)\n * @return {?} The instance found\n */\n\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @return {?} The ElementRef instance to use\n */\n\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @return {?} The TemplateRef instance to use\n */\n\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @return {?} The ViewContainerRef instance to use\n */\n\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param {?} index Index of the element in the data array\n * @param {?=} nameOrComponentDef Name of the DOM Node or `ComponentDef`.\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} localName A name under which a given element is exported.\n *\n * Attributes are passed as an array of strings where elements with an even index hold an attribute\n * name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n * @return {?}\n */\nfunction elementStart(index, nameOrComponentDef, attrs, localName) {\n    var /** @type {?} */ node;\n    var /** @type {?} */ native;\n    if (nameOrComponentDef == null) {\n        // native node retrieval - used for exporting elements as tpl local variables (<div #foo>)\n        var /** @type {?} */ node_1 = /** @type {?} */ ((data[index]));\n        native = node_1 && (/** @type {?} */ (node_1)).native;\n    }\n    else {\n        ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n        var /** @type {?} */ isHostElement = typeof nameOrComponentDef !== 'string';\n        var /** @type {?} */ name_1 = isHostElement ? (/** @type {?} */ (nameOrComponentDef)).tag : /** @type {?} */ (nameOrComponentDef);\n        if (name_1 === null) {\n            // TODO: future support for nameless components.\n            throw 'for now name is required';\n        }\n        else {\n            native = renderer.createElement(name_1);\n            var /** @type {?} */ componentView = null;\n            if (isHostElement) {\n                var /** @type {?} */ ngStaticData_1 = getTemplateStatic((/** @type {?} */ (nameOrComponentDef)).template);\n                componentView = addToViewTree(createViewState(-1, rendererFactory.createRenderer(native, (/** @type {?} */ (nameOrComponentDef)).rendererType), ngStaticData_1));\n            }\n            // Only component views should be added to the view tree directly. Embedded views are\n            // accessed through their containers because they may be removed / re-added later.\n            node = createLNode(index, 3 /* Element */, native, componentView);\n            if (node.staticData == null) {\n                ngDevMode && assertDataInRange(index - 1);\n                node.staticData = ngStaticData[index] =\n                    createNodeStatic(name_1, attrs || null, null, localName || null);\n            }\n            if (attrs)\n                setUpAttributes(native, attrs);\n            appendChild(/** @type {?} */ ((node.parent)), native, currentView);\n        }\n    }\n    return native;\n}\n/**\n * Gets static data from a template function or creates a new static\n * data array if it doesn't already exist.\n *\n * @param {?} template The template from which to get static data\n * @return {?} NgStaticData\n */\nfunction getTemplateStatic(template) {\n    return template.ngStaticData || (template.ngStaticData = /** @type {?} */ ([]));\n}\n/**\n * @param {?} native\n * @param {?} attrs\n * @return {?}\n */\nfunction setUpAttributes(native, attrs) {\n    ngDevMode && assertEqual(attrs.length % 2, 0, 'attrs.length % 2');\n    var /** @type {?} */ isProceduralRenderer = (/** @type {?} */ (renderer)).setAttribute;\n    for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        isProceduralRenderer ? /** @type {?} */ (((/** @type {?} */ (renderer)).setAttribute))(native, attrs[i], attrs[i | 1]) :\n            native.setAttribute(attrs[i], attrs[i | 1]);\n    }\n}\n/**\n * @param {?} text\n * @param {?} token\n * @return {?}\n */\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param {?} factory\n * @param {?} elementOrSelector Render element or CSS selector to locate the element.\n * @return {?}\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var /** @type {?} */ defaultRenderer = factory.createRenderer(null, null);\n    var /** @type {?} */ rNode = typeof elementOrSelector === 'string' ?\n        ((/** @type {?} */ (defaultRenderer)).selectRootElement ?\n            (/** @type {?} */ (defaultRenderer)).selectRootElement(elementOrSelector) : /** @type {?} */ (((/** @type {?} */ (defaultRenderer)).querySelector))(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode..\n *\n * @param {?} rNode Render host element.\n * @param {?} def\n * @return {?}\n */\nfunction hostElement(rNode, def) {\n    resetApplicationState();\n    createLNode(0, 3 /* Element */, rNode, createViewState(-1, renderer, getTemplateStatic(def.template)));\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param {?} eventName Name of the event\n * @param {?} listener The function to be called when event emits\n * @param {?=} useCapture Whether or not to use capture in event listener.\n * @return {?}\n */\n\n/**\n * Mark the end of the element.\n * @return {?}\n */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((previousOrParentNode.parent));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var /** @type {?} */ query = previousOrParentNode.query;\n    query && query.addNode(previousOrParentNode);\n}\n/**\n * Update an attribute on an Element. This is used with a `bind` instruction.\n *\n * @param {?} index The index of the element to update in the data array\n * @param {?} attrName Name of attribute. Because it is going to DOM, this is not subject to\n *        renaming as port of minification.\n * @param {?} value Value to write. This value will go through stringification.\n * @return {?}\n */\n\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new \\@Inputs don't have to be re-compiled.\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value New value to write.\n * @return {?}\n */\nfunction elementProperty(index, propName, value) {\n    if (value === NO_CHANGE)\n        return;\n    var /** @type {?} */ node = /** @type {?} */ (data[index]);\n    var /** @type {?} */ staticData = /** @type {?} */ ((node.staticData));\n    // if staticData.inputs is undefined, a listener has created output staticData, but inputs haven't\n    // yet been checked\n    if (staticData.inputs === undefined) {\n        // mark inputs as checked\n        staticData.inputs = null;\n        staticData = generatePropertyAliases(node.flags, staticData, true);\n    }\n    var /** @type {?} */ inputData = staticData.inputs;\n    var /** @type {?} */ dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n    }\n    else {\n        var /** @type {?} */ native = node.native;\n        (/** @type {?} */ (renderer)).setProperty ?\n            (/** @type {?} */ (renderer)).setProperty(native, propName, value) :\n            native.setProperty ? native.setProperty(propName, value) :\n                (/** @type {?} */ (native))[propName] = value;\n    }\n}\n/**\n * Constructs a LNodeStatic object from the arguments.\n *\n * @param {?} tagName\n * @param {?} attrs\n * @param {?} containerStatic\n * @param {?} localName\n * @return {?} the LNodeStatic object\n */\nfunction createNodeStatic(tagName, attrs, containerStatic, localName) {\n    return {\n        tagName: tagName,\n        attrs: attrs,\n        localNames: localName ? [localName, -1] : null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        containerStatic: containerStatic\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n * @param {?} inputs\n * @param {?} value\n * @return {?}\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var /** @type {?} */ i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (inputs[i]));\n        data[/** @type {?} */ (inputs[i])][inputs[i | 1]] = value;\n    }\n}\n/**\n * This function consolidates all the inputs or outputs defined by directives\n * on this node into one object and stores it in ngStaticData so it can\n * be shared between all templates of this type.\n *\n * @param {?} flags\n * @param {?} data\n * @param {?=} isInputData\n * @return {?}\n */\nfunction generatePropertyAliases(flags, data, isInputData) {\n    if (isInputData === void 0) { isInputData = false; }\n    var /** @type {?} */ start = flags >> 12;\n    var /** @type {?} */ size = (flags & 4092 /* SIZE_MASK */) >> 2;\n    for (var /** @type {?} */ i = start, /** @type {?} */ ii = start + size; i < ii; i++) {\n        var /** @type {?} */ directiveDef = /** @type {?} */ (((ngStaticData))[i]);\n        var /** @type {?} */ propertyAliasMap = isInputData ? directiveDef.inputs : directiveDef.outputs;\n        for (var /** @type {?} */ publicName in propertyAliasMap) {\n            if (propertyAliasMap.hasOwnProperty(publicName)) {\n                var /** @type {?} */ internalName = propertyAliasMap[publicName];\n                var /** @type {?} */ staticDirData = isInputData ? (data.inputs || (data.inputs = {})) :\n                    (data.outputs || (data.outputs = {}));\n                var /** @type {?} */ hasProperty = staticDirData.hasOwnProperty(publicName);\n                hasProperty ? staticDirData[publicName].push(i, internalName) :\n                    (staticDirData[publicName] = [i, internalName]);\n            }\n        }\n    }\n    return data;\n}\n/**\n * Add or remove a class in a classList.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value A value indicating if a given class should be added or removed.\n * @return {?}\n */\n\n/**\n * Update a given style on an Element.\n *\n * @template T\n * @param {?} index Index of the element to change in the data array\n * @param {?} styleName Name of property. Because it is going to DOM this is not subject to\n *        renaming as part of minification.\n * @param {?} value New value to write (null to remove).\n * @param {?=} suffix Suffix to add to style's value (optional).\n * @return {?}\n */\nfunction elementStyle(index, styleName, value, suffix) {\n    if (value !== NO_CHANGE) {\n        var /** @type {?} */ lElement = /** @type {?} */ (data[index]);\n        if (value == null) {\n            (/** @type {?} */ (renderer)).removeStyle ?\n                (/** @type {?} */ (renderer))\n                    .removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native.style.removeProperty(styleName);\n        }\n        else {\n            (/** @type {?} */ (renderer)).setStyle ?\n                (/** @type {?} */ (renderer))\n                    .setStyle(lElement.native, styleName, suffix ? stringify$1(value) + suffix : stringify$1(value), RendererStyleFlags3.DashCase) :\n                lElement.native.style.setProperty(styleName, suffix ? stringify$1(value) + suffix : stringify$1(value));\n        }\n    }\n}\n/**\n * Create static text node\n *\n * @param {?} index Index of the node in the data array.\n * @param {?=} value Value to write. This value will be stringified.\n *   If value is not provided than the actual creation of the text node is delayed.\n * @return {?}\n */\nfunction text(index, value) {\n    ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n    var /** @type {?} */ textNode = value != null ?\n        ((/** @type {?} */ (renderer)).createText ?\n            (/** @type {?} */ (renderer)).createText(stringify$1(value)) : /** @type {?} */ (((/** @type {?} */ (renderer)).createTextNode))(stringify$1(value))) :\n        null;\n    var /** @type {?} */ node = createLNode(index, 3 /* Element */, textNode);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(/** @type {?} */ ((node.parent)), textNode, currentView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper bind(1-8) method\n *\n * @template T\n * @param {?} index Index of the node in the data array.\n * @param {?} value Stringified value to write.\n * @return {?}\n */\nfunction textBinding(index, value) {\n    // TODO(misko): I don't think index < nodes.length check is needed here.\n    var /** @type {?} */ existingNode = index < data.length && /** @type {?} */ (data[index]);\n    if (existingNode && existingNode.native) {\n        // If DOM node exists and value changed, update textContent\n        value !== NO_CHANGE &&\n            ((/** @type {?} */ (renderer)).setValue ?\n                (/** @type {?} */ (renderer)).setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value));\n    }\n    else if (existingNode) {\n        // Node was created but DOM node creation was delayed. Create and append now.\n        existingNode.native =\n            ((/** @type {?} */ (renderer)).createText ?\n                (/** @type {?} */ (renderer)).createText(stringify$1(value)) : /** @type {?} */ (((/** @type {?} */ (renderer)).createTextNode))(stringify$1(value)));\n        insertChild(existingNode, currentView);\n    }\n    else {\n        text(index, value);\n    }\n}\n/**\n * @template T\n * @param {?} index\n * @param {?=} directive\n * @param {?=} directiveDef\n * @param {?=} localName\n * @return {?}\n */\nfunction directive(index, directive, directiveDef, localName) {\n    var /** @type {?} */ instance;\n    if (directive == null) {\n        // return existing\n        ngDevMode && assertDataInRange(index);\n        instance = data[index];\n    }\n    else {\n        ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n        ngDevMode && assertPreviousIsParent();\n        var /** @type {?} */ flags = /** @type {?} */ ((previousOrParentNode)).flags;\n        var /** @type {?} */ size = flags & 4092;\n        if (size === 0) {\n            flags =\n                (index << 12 /* INDX_SHIFT */) | 4 /* SIZE_SKIP */ | flags & 3 /* TYPE_MASK */;\n        }\n        else {\n            flags += 4 /* SIZE_SKIP */;\n        } /** @type {?} */\n        ((previousOrParentNode)).flags = flags;\n        ngDevMode && assertDataInRange(index - 1);\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        data[index] = instance = directive;\n        if (index >= ngStaticData.length) {\n            ngStaticData[index] = /** @type {?} */ ((directiveDef));\n            if (localName) {\n                ngDevMode &&\n                    assertNotNull(previousOrParentNode.staticData, 'previousOrParentNode.staticData');\n                var /** @type {?} */ nodeStaticData = /** @type {?} */ ((/** @type {?} */ ((previousOrParentNode)).staticData));\n                (nodeStaticData.localNames || (nodeStaticData.localNames = [])).push(localName, index);\n            }\n        }\n        var /** @type {?} */ diPublic_1 = /** @type {?} */ ((directiveDef)).diPublic;\n        if (diPublic_1) {\n            diPublic_1(/** @type {?} */ ((directiveDef)));\n        }\n        var /** @type {?} */ staticData = /** @type {?} */ ((previousOrParentNode.staticData));\n        if (staticData && staticData.attrs) {\n            setInputsFromAttrs(instance, /** @type {?} */ ((directiveDef)).inputs, staticData);\n        }\n    }\n    return instance;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @template T\n * @param {?} instance Instance of the directive on which to set the initial inputs\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} staticData The static data for this node\n * @return {?}\n */\nfunction setInputsFromAttrs(instance, inputs, staticData) {\n    var /** @type {?} */ directiveIndex = ((previousOrParentNode.flags & 4092 /* SIZE_MASK */) >> 2 /* SIZE_SHIFT */) - 1;\n    var /** @type {?} */ initialInputData = /** @type {?} */ (staticData.initialInputs);\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, staticData);\n    }\n    var /** @type {?} */ initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var /** @type {?} */ i = 0; i < initialInputs.length; i += 2) {\n            (/** @type {?} */ (instance))[initialInputs[i]] = initialInputs[i | 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an \\@Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` \\@Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param {?} directiveIndex Index to store the initial input data\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} staticData The static data on this node\n * @return {?}\n */\nfunction generateInitialInputs(directiveIndex, inputs, staticData) {\n    var /** @type {?} */ initialInputData = staticData.initialInputs || (staticData.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var /** @type {?} */ attrs = /** @type {?} */ ((staticData.attrs));\n    for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        var /** @type {?} */ attrName = attrs[i];\n        var /** @type {?} */ minifiedInputName = inputs[attrName];\n        if (minifiedInputName !== undefined) {\n            var /** @type {?} */ inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrs[i | 1]);\n        }\n    }\n    return initialInputData;\n}\n/**\n * @param {?} lifecycle\n * @param {?=} self\n * @param {?=} method\n * @return {?}\n */\n\n/**\n * Iterates over view hook functions and calls them.\n * @return {?}\n */\nfunction executeViewHooks() {\n    if (viewHookStartIndex == null)\n        return;\n    // Instead of using splice to remove init hooks after their first run (expensive), we\n    // shift over the AFTER_CHECKED hooks as we call them and truncate once at the end.\n    var /** @type {?} */ checkIndex = /** @type {?} */ (viewHookStartIndex);\n    var /** @type {?} */ writeIndex = checkIndex;\n    while (checkIndex < data.length) {\n        // Call lifecycle hook with its context\n        data[checkIndex + 1].call(data[checkIndex + 2]);\n        if (data[checkIndex] === 16 /* AFTER_VIEW_CHECKED */) {\n            // We know if the writeIndex falls behind that there is an init that needs to\n            // be overwritten.\n            if (writeIndex < checkIndex) {\n                data[writeIndex] = data[checkIndex];\n                data[writeIndex + 1] = data[checkIndex + 1];\n                data[writeIndex + 2] = data[checkIndex + 2];\n            }\n            writeIndex += 3;\n        }\n        checkIndex += 3;\n    }\n    // Truncate once at the writeIndex\n    data.length = writeIndex;\n}\n/**\n * Creates an LContainer.\n *\n * Only `LView`s can go into `LContainer`.\n *\n * @param {?} index The index of the container in the data array\n * @param {?=} template Optional inline template\n * @param {?=} tagName The name of the container element, if applicable\n * @param {?=} attrs The attrs attached to the container, if applicable\n * @param {?=} localName\n * @return {?}\n */\nfunction containerStart(index, template, tagName, attrs, localName) {\n    ngDevMode && assertEqual(currentView.bindingStartIndex, null, 'bindingStartIndex');\n    // If the direct parent of the container is a view, its views (including its comment)\n    // will need to be added through insertView() when its parent view is being inserted.\n    // For now, it is marked \"headless\" so we know to append its views later.\n    var /** @type {?} */ comment = renderer.createComment(ngDevMode ? 'container' : '');\n    var /** @type {?} */ renderParent = null;\n    var /** @type {?} */ currentParent = isParent ? previousOrParentNode : /** @type {?} */ ((previousOrParentNode.parent));\n    ngDevMode && assertNotEqual(currentParent, null, 'currentParent');\n    if (appendChild(currentParent, comment, currentView)) {\n        // we are adding to an Element which is either:\n        // - Not a component (will not be re-projected, just added)\n        // - View of the Component\n        renderParent = /** @type {?} */ (currentParent);\n    }\n    var /** @type {?} */ node = createLNode(index, 0 /* Container */, comment, /** @type {?} */ ({\n        views: [],\n        nextIndex: 0, renderParent: renderParent,\n        template: template == null ? null : template,\n        next: null,\n        parent: currentView\n    }));\n    if (node.staticData == null) {\n        node.staticData = ngStaticData[index] =\n            createNodeStatic(tagName || null, attrs || null, [], localName || null);\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(node.data);\n}\n/**\n * @return {?}\n */\nfunction containerEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((previousOrParentNode.parent));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var /** @type {?} */ query = previousOrParentNode.query;\n    query && query.addNode(previousOrParentNode);\n}\n/**\n * Sets a container up to receive views.\n *\n * @param {?} index The index of the container in the data array\n * @return {?}\n */\nfunction containerRefreshStart(index) {\n    ngDevMode && assertDataInRange(index);\n    previousOrParentNode = /** @type {?} */ (data[index]);\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    (/** @type {?} */ (previousOrParentNode)).data.nextIndex = 0;\n}\n/**\n * Marks the end of the LContainer.\n *\n * Marking the end of ViewContainer is the time when to child Views get inserted or removed.\n * @return {?}\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((previousOrParentNode.parent));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var /** @type {?} */ container = /** @type {?} */ (previousOrParentNode);\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var /** @type {?} */ nextIndex = container.data.nextIndex;\n    while (nextIndex < container.data.views.length) {\n        // remove extra view.\n        removeView(container, nextIndex);\n    }\n}\n/**\n * Creates an LView.\n *\n * @param {?} viewBlockId The ID of this view\n * @return {?} Whether or not this view is in creation mode\n */\nfunction viewStart(viewBlockId) {\n    var /** @type {?} */ container = /** @type {?} */ ((isParent ? previousOrParentNode : /** @type {?} */ ((previousOrParentNode.parent))));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var /** @type {?} */ containerState = container.data;\n    var /** @type {?} */ views = containerState.views;\n    var /** @type {?} */ existingView = !creationMode && containerState.nextIndex < views.length && views[containerState.nextIndex];\n    var /** @type {?} */ viewUpdateMode = existingView && viewBlockId === (/** @type {?} */ (existingView)).data.id;\n    if (viewUpdateMode) {\n        previousOrParentNode = views[containerState.nextIndex++];\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView((/** @type {?} */ (existingView)).data, /** @type {?} */ (previousOrParentNode));\n    }\n    else {\n        // When we create a new View, we always reset the state of the instructions.\n        var /** @type {?} */ newViewState = createViewState(viewBlockId, renderer, initViewStaticData(viewBlockId, container));\n        enterView(newViewState, createLNode(null, 2 /* View */, null, newViewState));\n        containerState.nextIndex++;\n    }\n    return !viewUpdateMode;\n}\n/**\n * Initialize the static data for the active view.\n *\n * Each embedded view needs to set the global ngStaticData variable to the static data for\n * that view. Otherwise, the view's static data for a particular node would overwrite\n * the staticdata for a node in the view above it with the same index (since it's in the\n * same template).\n *\n * @param {?} viewIndex The index of the view's static data in containerStatic\n * @param {?} parent The parent container in which to look for the view's static data\n * @return {?} NgStaticData\n */\nfunction initViewStaticData(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var /** @type {?} */ containerStatic = (/** @type {?} */ (((parent)).staticData)).containerStatic;\n    if (viewIndex >= containerStatic.length || containerStatic[viewIndex] == null) {\n        containerStatic[viewIndex] = [];\n    }\n    return containerStatic[viewIndex];\n}\n/**\n * Marks the end of the LView.\n * @return {?}\n */\nfunction viewEnd() {\n    isParent = false;\n    var /** @type {?} */ viewNode = previousOrParentNode = /** @type {?} */ (currentView.node);\n    var /** @type {?} */ container = /** @type {?} */ (previousOrParentNode.parent);\n    ngDevMode && assertNodeType(viewNode, 2 /* View */);\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var /** @type {?} */ containerState = container.data;\n    var /** @type {?} */ previousView = containerState.nextIndex <= containerState.views.length ? /** @type {?} */ (containerState.views[containerState.nextIndex - 1]) :\n        null;\n    var /** @type {?} */ viewIdChanged = previousView == null ? true : previousView.data.id !== viewNode.data.id;\n    if (viewIdChanged) {\n        insertView(container, viewNode, containerState.nextIndex - 1);\n        currentView.creationMode = false;\n    }\n    leaveView(/** @type {?} */ ((/** @type {?} */ ((currentView)).parent)));\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * Refreshes the component view.\n *\n * In other words, enters the component's view and processes it to update bindings, queries, etc.\n *\n * @param directiveIndex\n * @param elementIndex\n * @param template\n */\nvar componentRefresh = function (directiveIndex, elementIndex, template) {\n    ngDevMode && assertDataInRange(elementIndex);\n    var /** @type {?} */ element = /** @type {?} */ (((data))[elementIndex]);\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode && assertNotEqual(element.data, null, 'isComponent');\n    ngDevMode && assertDataInRange(directiveIndex);\n    var /** @type {?} */ hostView = /** @type {?} */ ((element.data));\n    ngDevMode && assertNotEqual(hostView, null, 'hostView');\n    var /** @type {?} */ directive = data[directiveIndex];\n    var /** @type {?} */ oldView = enterView(hostView, element);\n    try {\n        template(directive, creationMode);\n    }\n    finally {\n        hostView.creationMode = false;\n        leaveView(oldView);\n    }\n};\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * @param {?=} selectors\n * @return {?}\n */\n\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param {?} nodeIndex\n * @param {?} localIndex - index under which distribution of projected nodes was memorized\n * @param {?=} selectorIndex - 0 means <ng-content> without any selector\n * @return {?}\n */\n\n/**\n * Adds a ViewState or a ContainerState to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @template T\n * @param {?} state The ViewState or ContainerState to add to the view tree\n * @return {?} The state passed in\n */\nfunction addToViewTree(state) {\n    currentView.tail ? (currentView.tail.next = state) : (currentView.child = state);\n    currentView.tail = state;\n    return state;\n}\n/**\n * A special value which designates that a value has not changed.\n */\nvar NO_CHANGE = /** @type {?} */ ({});\n/**\n * Create interpolation bindings with variable number of arguments.\n *\n * If any of the arguments change, then the interpolation is concatenated\n * and causes an update.\n *\n * @param {?} values an array of values to diff.\n * @return {?}\n */\n\n/**\n * Create a single value binding without interpolation.\n *\n * @template T\n * @param {?} value Value to diff\n * @return {?}\n */\nfunction bind(value) {\n    var /** @type {?} */ different;\n    if (different = creationMode) {\n        if (typeof currentView.bindingStartIndex !== 'number') {\n            bindingIndex = currentView.bindingStartIndex = data.length;\n        }\n        data[bindingIndex++] = value;\n    }\n    else {\n        if (different = value !== NO_CHANGE && isDifferent(data[bindingIndex], value)) {\n            data[bindingIndex] = value;\n        }\n        bindingIndex++;\n    }\n    return different ? value : NO_CHANGE;\n}\n/**\n * Create an interpolation bindings with 1 arguments.\n *\n * @param {?} prefix static value used for concatenation only.\n * @param {?} value value checked for change.\n * @param {?} suffix static value used for concatenation only.\n * @return {?}\n */\nfunction bind1(prefix, value, suffix) {\n    return bind(value) === NO_CHANGE ? NO_CHANGE : prefix + stringify$1(value) + suffix;\n}\n/**\n * Create an interpolation bindings with 2 arguments.\n *\n * @param {?} prefix\n * @param {?} v0 value checked for change\n * @param {?} i0\n * @param {?} v1 value checked for change\n * @param {?} suffix\n * @return {?}\n */\n\n/**\n * Create an interpolation bindings with 3 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} suffix\n * @return {?}\n */\n\n/**\n * Create an interpolation binding with 4 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} suffix\n * @return {?}\n */\n\n/**\n * Create an interpolation binding with 5 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} suffix\n * @return {?}\n */\n\n/**\n * Create an interpolation binding with 6 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} suffix\n * @return {?}\n */\n\n/**\n * Create an interpolation binding with 7 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} suffix\n * @return {?}\n */\n\n/**\n * Create an interpolation binding with 8 arguments.\n *\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} i6\n * @param {?} v7\n * @param {?} suffix\n * @return {?}\n */\n\n/**\n * @template T\n * @param {?} index\n * @param {?=} value\n * @return {?}\n */\n\n/**\n * @template T\n * @param {?} predicate\n * @param {?=} descend\n * @param {?=} read\n * @return {?}\n */\n\n/**\n * @return {?}\n */\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'isParent');\n}\n/**\n * @return {?}\n */\nfunction assertHasParent() {\n    assertNotEqual(previousOrParentNode.parent, null, 'isParent');\n}\n/**\n * @param {?} index\n * @param {?=} arr\n * @return {?}\n */\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertLessThan(arr ? arr.length : 0, index, 'data.length');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Options that control how the component should be bootstrapped.\n * @record\n */\n\n/**\n * Bootstraps a component, then creates and returns a `ComponentRef` for that component.\n *\n * @template T\n * @param {?} componentType Component to bootstrap\n * @param {?} opts\n * @return {?}\n */\n\n// TODO: A hack to not pull in the NullInjector from @angular/core.\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * @template T\n * @param {?} componentType Component to bootstrap\n * @param {?=} opts\n * @return {?}\n */\nfunction renderComponent(componentType, opts) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var /** @type {?} */ componentDef = componentType.ngComponentDef;\n    var /** @type {?} */ component;\n    var /** @type {?} */ hostNode = locateHostElement(rendererFactory, opts.host || componentDef.tag);\n    var /** @type {?} */ oldView = enterView(createViewState(-1, rendererFactory.createRenderer(hostNode, componentDef.rendererType), []), /** @type {?} */ ((null)));\n    try {\n        // Create element node at index 0 in data array\n        hostElement(hostNode, componentDef);\n        // Create directive instance with n() and store at index 1 in data array (el is 0)\n        component = directive(1, componentDef.n(), componentDef);\n    }\n    finally {\n        leaveView(oldView);\n    }\n    opts.features && opts.features.forEach(function (feature) { return feature(component, componentDef); });\n    detectChanges(component);\n    return component;\n}\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nfunction detectChanges(component) {\n    ngDevMode && assertNotNull(component, 'component');\n    var /** @type {?} */ hostNode = /** @type {?} */ ((/** @type {?} */ (component))[NG_HOST_SYMBOL]);\n    if (ngDevMode && !hostNode) {\n        createError('Not a directive instance', component);\n    }\n    ngDevMode && assertNotNull(hostNode.data, 'hostNode.data');\n    renderComponentOrTemplate(hostNode, hostNode.view, component);\n    isDirty = false;\n}\nvar isDirty = false;\n/**\n * @template T\n * @param {?} component\n * @param {?=} scheduler\n * @return {?}\n */\n\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static [COMPONENT_DEF_SYMBOL] = defineComponent({\n *     ...\n *   });\n * }\n * ```\n * @template T\n * @param {?} componentDefinition\n * @return {?}\n */\nfunction defineComponent(componentDefinition) {\n    var /** @type {?} */ def = /** @type {?} */ ({\n        type: componentDefinition.type,\n        diPublic: null,\n        n: componentDefinition.factory,\n        tag: (/** @type {?} */ (componentDefinition)).tag || /** @type {?} */ ((null)),\n        template: (/** @type {?} */ (componentDefinition)).template || /** @type {?} */ ((null)),\n        r: componentDefinition.refresh ||\n            function (d, e) { componentRefresh(d, e, componentDefinition.template); },\n        h: componentDefinition.hostBindings || noop$1,\n        inputs: invertObject(componentDefinition.inputs),\n        outputs: invertObject(componentDefinition.outputs),\n        methods: invertObject(componentDefinition.methods),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n    });\n    var /** @type {?} */ feature = componentDefinition.features;\n    feature && feature.forEach(function (fn) { return fn(def); });\n    return def;\n}\n/**\n * @template T\n * @param {?} definition\n * @return {?}\n */\n\n/**\n * @template T\n * @param {?} definition\n * @return {?}\n */\n\nvar EMPTY$1 = {};\n/**\n * @return {?}\n */\nfunction noop$1() { }\n/**\n * Swaps the keys and values of an object.\n * @param {?} obj\n * @return {?}\n */\nfunction invertObject(obj) {\n    if (obj == null)\n        return EMPTY$1;\n    var /** @type {?} */ newObj = {};\n    for (var /** @type {?} */ minifiedKey in obj) {\n        newObj[obj[minifiedKey]] = minifiedKey;\n    }\n    return newObj;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static [DIRECTIVE_DEF_SYMBOL] = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// clang-format on\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disbled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n *\n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n *\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\"> {{ banner }} </div>\n *     </div>\n *   `\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ])),\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nvar AUTO_STYLE = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.MissingTranslationStrategy = MissingTranslationStrategy;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.SecurityContext = SecurityContext;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.ViewEncapsulation = ViewEncapsulation;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Injectable = Injectable;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RendererStyleFlags2 = RendererStyleFlags2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectionStrategy = ChangeDetectionStrategy;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ɵValueUnwrapper = ValueUnwrapper;\nexports.ɵdevModeEqual = devModeEqual;\nexports.ɵisListLikeIterable = isListLikeIterable;\nexports.ɵChangeDetectorStatus = ChangeDetectorStatus;\nexports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ɵConsole = Console;\nexports.ɵComponentFactory = ComponentFactory;\nexports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ɵReflectionCapabilities = ReflectionCapabilities;\nexports.ɵRenderDebugInfo = RenderDebugInfo;\nexports.ɵglobal = _global;\nexports.ɵlooseIdentical = looseIdentical;\nexports.ɵstringify = stringify;\nexports.ɵmakeDecorator = makeDecorator;\nexports.ɵisObservable = isObservable;\nexports.ɵisPromise = isPromise;\nexports.ɵclearOverrides = clearOverrides;\nexports.ɵoverrideComponentView = overrideComponentView;\nexports.ɵoverrideProvider = overrideProvider;\nexports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ɵdefineComponent = defineComponent;\nexports.ɵdetectChanges = detectChanges;\nexports.ɵrenderComponent = renderComponent;\nexports.ɵC = containerStart;\nexports.ɵD = directive;\nexports.ɵE = elementStart;\nexports.ɵT = text;\nexports.ɵV = viewStart;\nexports.ɵb = bind;\nexports.ɵb1 = bind1;\nexports.ɵc = containerEnd;\nexports.ɵcR = containerRefreshStart;\nexports.ɵcr = containerRefreshEnd;\nexports.ɵe = elementEnd;\nexports.ɵp = elementProperty;\nexports.ɵs = elementStyle;\nexports.ɵt = textBinding;\nexports.ɵv = viewEnd;\nexports.ɵregisterModuleFactory = registerModuleFactory;\nexports.ɵEMPTY_ARRAY = EMPTY_ARRAY;\nexports.ɵEMPTY_MAP = EMPTY_MAP;\nexports.ɵand = anchorDef;\nexports.ɵccf = createComponentFactory;\nexports.ɵcmf = createNgModuleFactory;\nexports.ɵcrt = createRendererType2;\nexports.ɵdid = directiveDef;\nexports.ɵeld = elementDef;\nexports.ɵelementEventFullName = elementEventFullName;\nexports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ɵinlineInterpolate = inlineInterpolate;\nexports.ɵinterpolate = interpolate;\nexports.ɵmod = moduleDef;\nexports.ɵmpd = moduleProvideDef;\nexports.ɵncd = ngContentDef;\nexports.ɵnov = nodeValue;\nexports.ɵpid = pipeDef;\nexports.ɵprd = providerDef;\nexports.ɵpad = pureArrayDef;\nexports.ɵpod = pureObjectDef;\nexports.ɵppd = purePipeDef;\nexports.ɵqud = queryDef;\nexports.ɵted = textDef;\nexports.ɵunv = unwrapValue;\nexports.ɵvid = viewDef;\nexports.AUTO_STYLE = AUTO_STYLE;\nexports.trigger = trigger$$1;\nexports.animate = animate$$1;\nexports.group = group$$1;\nexports.sequence = sequence$$1;\nexports.style = style$$1;\nexports.state = state$$1;\nexports.keyframes = keyframes$$1;\nexports.transition = transition$$1;\nexports.ɵbe = animate$1;\nexports.ɵbf = group$1;\nexports.ɵbj = keyframes$1;\nexports.ɵbg = sequence$1;\nexports.ɵbi = state$1;\nexports.ɵbh = style$1;\nexports.ɵbk = transition$1;\nexports.ɵbd = trigger$1;\nexports.ɵm = _iterableDiffersFactory;\nexports.ɵn = _keyValueDiffersFactory;\nexports.ɵo = _localeFactory;\nexports.ɵh = _appIdRandomProviderFactory;\nexports.ɵi = defaultIterableDiffers;\nexports.ɵj = defaultKeyValueDiffers;\nexports.ɵk = DefaultIterableDifferFactory;\nexports.ɵl = DefaultKeyValueDifferFactory;\nexports.ɵd = ReflectiveInjector_;\nexports.ɵf = ReflectiveDependency;\nexports.ɵg = resolveReflectiveProviders;\nexports.ɵq = wtfEnabled;\nexports.ɵu = createScope;\nexports.ɵr = detectWTF;\nexports.ɵy = endTimeRange;\nexports.ɵw = leave;\nexports.ɵx = startTimeRange;\nexports.ɵbb = stringify$1;\nexports.ɵa = makeParamDecorator;\nexports.ɵz = _def;\nexports.ɵba = DebugContext;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}