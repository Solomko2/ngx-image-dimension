{"version":3,"file":"tippex.es6.js","sources":["../src/getLocation.js","../src/index.js"],"sourcesContent":["export default function getLocation ( source, charIndex ) {\n\tconst lines = source.split( '\\n' );\n\tconst len = lines.length;\n\n\tfor ( let i = 0, lineStart = 0; i < len; i += 1 ) {\n\t\tvar line = lines[i];\n\t\tvar lineEnd =  lineStart + line.length + 1; // +1 for newline\n\n\t\tif ( lineEnd > charIndex ) {\n\t\t\treturn { line: i + 1, column: charIndex - lineStart };\n\t\t}\n\n\t\tlineStart = lineEnd;\n\t}\n\n\tthrow new Error( `Could not determine location of character ${charIndex}` );\n}\n","import getLocation from './getLocation.js';\n\nconst keywords = /(case|default|delete|do|else|in|instanceof|new|return|throw|typeof|void)\\s*$/;\nconst punctuators = /(^|\\{|\\(|\\[\\.|;|,|<|>|<=|>=|==|!=|===|!==|\\+|-|\\*\\%|<<|>>|>>>|&|\\||\\^|!|~|&&|\\|\\||\\?|:|=|\\+=|-=|\\*=|%=|<<=|>>=|>>>=|&=|\\|=|\\^=|\\/=|\\/)\\s*$/;\nconst ambiguous = /(\\}|\\)|\\+\\+|--)\\s*$/;\nconst beforeJsx = /^$|[=:;,\\(\\{\\}\\[|&+]\\s*$/;\n\nexport function find ( str ) {\n\tlet quote;\n\tlet escapedFrom;\n\tlet regexEnabled = true;\n\tlet pfixOp = false;\n\tlet jsxTagDepth = 0;\n\tlet stack = [];\n\n\tlet start;\n\tlet found = [];\n\tlet state = base;\n\n\tfunction base ( char, i ) {\n\t\tif ( char === '/' ) {\n\t\t\t// could be start of regex literal OR division punctuator. Solution via\n\t\t\t// http://stackoverflow.com/questions/5519596/when-parsing-javascript-what-determines-the-meaning-of-a-slash/27120110#27120110\n\t\t\tconst substr = str.substr( 0, i );\n\t\t\tif ( keywords.test( substr ) || punctuators.test( substr ) ) regexEnabled = true;\n\t\t\telse if ( ambiguous.test( substr ) && !tokenClosesExpression( substr, found ) ) regexEnabled = true; // TODO save this determination for when it's necessary?\n\t\t\telse regexEnabled = false;\n\n\t\t\treturn start = i, slash;\n\t\t}\n\n\t\tif ( char === '\"' || char === \"'\" ) return start = i, quote = char, stack.push( base ), string;\n\t\tif ( char === '`' ) return start = i, templateString;\n\n\t\tif ( char === '{' ) return stack.push( base ), base;\n\t\tif ( char === '}' ) return start = i, stack.pop();\n\n\t\tif ( !( pfixOp && /\\W/.test( char ) ) ) {\n\t\t\tpfixOp = ( char === '+' && str[ i - 1 ] === '+' ) || ( char === '-' && str[ i - 1 ] === '-' );\n\t\t}\n\n\t\tif ( char === '<' ) {\n\t\t\tlet substr = str.substr( 0, i );\n\t\t\tsubstr = _erase( substr, found ).trim();\n\t\t\tif ( beforeJsx.test( substr ) ) return stack.push( base ), jsxTagStart;\n\t\t}\n\n\t\treturn base;\n\t}\n\n\tfunction slash ( char ) {\n\t\tif ( char === '/' ) return lineComment;\n\t\tif ( char === '*' ) return blockComment;\n\t\tif ( char === '[' ) return regexEnabled ? regexCharacter : base;\n\t\tif ( char === '\\\\' ) return escapedFrom = regex, escaped;\n\t\treturn regexEnabled && !pfixOp ? regex : base;\n\t}\n\n\tfunction regex ( char, i ) {\n\t\tif ( char === '[' ) return regexCharacter;\n\t\tif ( char === '\\\\' ) return escapedFrom = regex, escaped;\n\n\t\tif ( char === '/' ) {\n\t\t\tconst end = i + 1;\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 1, -1 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'regex' });\n\n\t\t\treturn base;\n\t\t}\n\n\t\treturn regex;\n\t}\n\n\tfunction regexCharacter ( char ) {\n\t\tif ( char === ']' ) return regex;\n\t\tif ( char === '\\\\' ) return escapedFrom = regexCharacter, escaped;\n\t\treturn regexCharacter;\n\t}\n\n\tfunction string ( char, i ) {\n\t\tif ( char === '\\\\' ) return escapedFrom = string, escaped;\n\t\tif ( char === quote ) {\n\t\t\tconst end = i + 1;\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 1, -1 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'string' });\n\n\t\t\treturn stack.pop();\n\t\t}\n\n\t\treturn string;\n\t}\n\n\tfunction escaped () {\n\t\treturn escapedFrom;\n\t}\n\n\tfunction templateString ( char, i ) {\n\t\tif ( char === '$' ) return templateStringDollar;\n\t\tif ( char === '\\\\' ) return escapedFrom = templateString, escaped;\n\n\t\tif ( char === '`' ) {\n\t\t\tconst end = i + 1;\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 1, -1 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'templateEnd' });\n\n\t\t\treturn base;\n\t\t}\n\n\t\treturn templateString;\n\t}\n\n\tfunction templateStringDollar ( char, i ) {\n\t\tif ( char === '{' ) {\n\t\t\tconst end = i + 1;\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 1, -2 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'templateChunk' });\n\n\t\t\tstack.push( templateString );\n\t\t\treturn base;\n\t\t}\n\t\treturn templateString( char, i );\n\t}\n\n\t// JSX is an XML-like extension to ECMAScript\n\t// https://facebook.github.io/jsx/\n\n\tfunction jsxTagStart ( char ) {\n\t\tif ( char === '/' ) return jsxTagDepth--, jsxTag;\n\t\treturn jsxTagDepth++, jsxTag;\n\t}\n\n\tfunction jsxTag ( char, i ) {\n\t\tif ( char === '\"' || char === \"'\" ) return start = i, quote = char, stack.push( jsxTag ), string;\n\t\tif ( char === '{' ) return stack.push( jsxTag ), base;\n\t\tif ( char === '>' ) {\n\t\t\tif ( jsxTagDepth <= 0 ) return base;\n\t\t\treturn jsx;\n\t\t}\n\t\tif ( char === '/' ) return jsxTagSelfClosing;\n\n\t\treturn jsxTag;\n\t}\n\n\tfunction jsxTagSelfClosing ( char ) {\n\t\tif ( char === '>' ) {\n\t\t\tjsxTagDepth--;\n\t\t\tif ( jsxTagDepth <= 0 ) return base;\n\t\t\treturn jsx;\n\t\t}\n\n\t\treturn jsxTag;\n\t}\n\n\tfunction jsx ( char ) {\n\t\tif ( char === '{' ) return stack.push( jsx ), base;\n\t\tif ( char === '<' ) return jsxTagStart;\n\n\t\treturn jsx;\n\t}\n\n\tfunction lineComment ( char, end ) {\n\t\tif ( char === '\\n' ) {\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 2 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'line' });\n\n\t\t\treturn base;\n\t\t}\n\n\t\treturn lineComment;\n\t}\n\n\tfunction blockComment ( char ) {\n\t\tif ( char === '*' ) return blockCommentEnding;\n\t\treturn blockComment;\n\t}\n\n\tfunction blockCommentEnding ( char, i ) {\n\t\tif ( char === '/' ) {\n\t\t\tconst end = i + 1;\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 2, -2 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'block' });\n\n\t\t\treturn base;\n\t\t}\n\n\t\treturn blockComment( char );\n\t}\n\n\tfor ( let i = 0; i < str.length; i += 1 ) {\n\t\tif ( !state ) {\n\t\t\tconst { line, column } = getLocation( str, i );\n\t\t\tconst before = str.slice( 0, i );\n\t\t\tconst beforeLine = /(^|\\n).+$/.exec( before )[0];\n\t\t\tconst after = str.slice( i );\n\t\t\tconst afterLine = /.+(\\n|$)/.exec( after )[0];\n\n\t\t\tconst snippet = `${beforeLine}${afterLine}\\n${ Array( beforeLine.length + 1 ).join( ' ' )}^`;\n\n\t\t\tthrow new Error( `Unexpected character (${line}:${column}). If this is valid JavaScript, it's probably a bug in tippex. Please raise an issue at https://github.com/Rich-Harris/tippex/issues â€“ thanks!\\n\\n${snippet}` );\n\t\t}\n\n\t\tstate = state( str[i], i );\n\t}\n\n\treturn found;\n}\n\nfunction tokenClosesExpression ( substr, found ) {\n\tsubstr = _erase( substr, found );\n\n\tlet token = ambiguous.exec( substr );\n\tif ( token ) token = token[1];\n\n\tif ( token === ')' ) {\n\t\tlet count = 0;\n\t\tlet i = substr.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( substr[i] === ')' ) {\n\t\t\t\tcount += 1;\n\t\t\t}\n\n\t\t\tif ( substr[i] === '(' ) {\n\t\t\t\tcount -= 1;\n\t\t\t\tif ( count === 0 ) {\n\t\t\t\t\ti -= 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if parenthesized expression is immediately preceded by `if`/`while`, it's not closing an expression\n\t\twhile ( /\\s/.test( substr[i - 1] ) ) i -= 1;\n\t\tif ( substr.slice( i - 2, i ) === 'if' || substr.slice( i - 5, i ) === 'while' ) return false;\n\t}\n\n\t// TODO handle }, ++ and -- tokens immediately followed by / character\n\treturn true;\n}\n\nfunction spaces ( count ) {\n\tlet spaces = '';\n\twhile ( count-- ) spaces += ' ';\n\treturn spaces;\n}\n\nconst erasers = {\n\tstring: chunk => chunk.outer[0] + spaces( chunk.inner.length ) + chunk.outer[0],\n\tline: chunk => spaces( chunk.outer.length ),\n\tblock: chunk => chunk.outer.split( '\\n' ).map( line => spaces( line.length ) ).join( '\\n' ),\n\tregex: chunk => '/' + spaces( chunk.inner.length ) + '/',\n\ttemplateChunk: chunk => chunk.outer[0] + spaces( chunk.inner.length ) + '${',\n\ttemplateEnd: chunk => chunk.outer[0] + spaces( chunk.inner.length ) + '`'\n};\n\nexport function erase ( str ) {\n\tconst found = find( str );\n\treturn _erase( str, found );\n}\n\nfunction _erase ( str, found ) {\n\tlet erased = '';\n\tlet charIndex = 0;\n\n\tfor ( let i = 0; i < found.length; i += 1 ) {\n\t\tconst chunk = found[i];\n\t\terased += str.slice( charIndex, chunk.start );\n\t\terased += erasers[ chunk.type ]( chunk );\n\n\t\tcharIndex = chunk.end;\n\t}\n\n\terased += str.slice( charIndex );\n\treturn erased;\n}\n\nfunction makeGlobalRegExp ( original ) {\n\tlet flags = 'g';\n\n\tif ( original.multiline ) flags += 'm';\n\tif ( original.ignoreCase ) flags += 'i';\n\tif ( original.sticky ) flags += 'y';\n\tif ( original.unicode ) flags += 'u';\n\n\treturn new RegExp( original.source, flags );\n}\n\nexport function match ( str, pattern, callback ) {\n\tconst g = pattern.global;\n\tif ( !g ) pattern = makeGlobalRegExp( pattern );\n\n\tconst found = find( str );\n\n\tlet match;\n\tlet chunkIndex = 0;\n\n\twhile ( match = pattern.exec( str ) ) {\n\t\tlet chunk;\n\n\t\tdo {\n\t\t\tchunk = found[ chunkIndex ];\n\n\t\t\tif ( chunk && chunk.end < match.index ) {\n\t\t\t\tchunkIndex += 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while ( chunk );\n\n\t\tif ( !chunk || chunk.start > match.index ) {\n\t\t\tconst args = [].slice.call( match ).concat( match.index, str );\n\t\t\tcallback.apply( null, args );\n\t\t\tif ( !g ) break;\n\t\t}\n\t}\n}\n\nexport function replace ( str, pattern, callback ) {\n\tlet replacements = [];\n\n\tmatch( str, pattern, function ( match ) {\n\t\tconst start = arguments[ arguments.length - 2 ];\n\t\tconst end = start + match.length;\n\t\tconst content = callback.apply( null, arguments );\n\n\t\treplacements.push({ start, end, content });\n\t});\n\n\tlet replaced = '';\n\tlet lastIndex = 0;\n\n\tfor ( let i = 0; i < replacements.length; i += 1 ) {\n\t\tconst { start, end, content } = replacements[i];\n\t\treplaced += str.slice( lastIndex, start ) + content;\n\n\t\tlastIndex = end;\n\t}\n\n\treplaced += str.slice( lastIndex );\n\n\treturn replaced;\n}\n"],"names":["const","let","substr"],"mappings":"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"}