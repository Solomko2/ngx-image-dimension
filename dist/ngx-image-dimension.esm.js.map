{"version":3,"file":"ngx-image-dimension.esm.js","sources":["../lib/ngx-image-dimension.directive.ts","../lib/ngx-image-dimension.module.ts"],"sourcesContent":["import {AfterViewInit, Directive, ElementRef} from '@angular/core';\n\n@Directive({\n  selector: '[imageCenteredSize]'\n})\nexport class NgxImageDimensionDirective implements AfterViewInit {\n\n  constructor(public el: ElementRef) {}\n\n  ngAfterViewInit() {\n    this.el.nativeElement.style.overflow = 'hidden';\n    const im = this.el.nativeElement.querySelector('img');\n\n    im.onload = () => {\n      const th = this.el.nativeElement.getBoundingClientRect().height, // box height\n        tw = this.el.nativeElement.getBoundingClientRect().width, // box width\n        ih = im.height, // inital image height\n        iw = im.width; // initial image width;\n\n      if (ih > iw) {\n        // if portrait\n        im.classList.add('ww');\n        im.classList.remove('wh'); // set width 100%\n      } else {\n        // if landscape\n        im.classList.add('wh');\n        im.classList.remove('ww'); // set height 100%\n      }\n\n      // set offset\n      const nh = im.height, // new image height\n        nw = im.width, // new image width\n        hd = (nh - th) / 2, // half dif img/box height\n        wd = (nw - tw) / 2; // half dif img/box width\n\n      if (nh < nw) {\n        // if portrait\n        im.style.marginLeft = '-' + wd + 'px';\n        im.style.marginTop = 0; // offset left\n      } else {\n        // if landscape\n        im.style.marginTop = '-' + hd + 'px';\n        im.style.marginLeft = 0; // offset top\n      }\n    };\n  }\n}\n","import { NgModule, } from '@angular/core';\nimport {NgxImageDimensionDirective} from \"./ngx-image-dimension.directive\";\n\n@NgModule({\n    imports: [],\n    exports: [NgxImageDimensionDirective],\n    declarations: [NgxImageDimensionDirective]\n})\nexport class NgxImageDimensionModule { }"],"names":[],"mappings":";;;;;;;;;;;;;AAKO;IAEL,oCAAmB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;KAAI;IAErC,oDAAe,GAAf;QAAA,iBAoCC;QAnCC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAChD,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAEtD,EAAE,CAAC,MAAM,GAAG;YACV,IAAM,EAAE,GAAG,KAAI,CAAC,EAAE,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,MAAM;YAC7D,EAAE,GAAG,KAAI,CAAC,EAAE,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,KAAK;YACxD,EAAE,GAAG,EAAE,CAAC,MAAM;YACd,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC;YAEhB,IAAI,EAAE,GAAG,EAAE,EAAE;;gBAEX,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACvB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC3B;iBAAM;;gBAEL,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACvB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC3B;;YAGD,IAAM,EAAE,GAAG,EAAE,CAAC,MAAM;YAClB,EAAE,GAAG,EAAE,CAAC,KAAK;YACb,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;YAClB,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YAErB,IAAI,EAAE,GAAG,EAAE,EAAE;;gBAEX,EAAE,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC;gBACtC,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;aACxB;iBAAM;;gBAEL,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC;gBACrC,EAAE,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;aACzB;SACF,CAAC;KACH;IAxCU,0BAA0B;QAHtC,SAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;SAChC,CAAC;6DAGuB,UAAU,oBAAV,UAAU;OAFtB,0BAA0B,CAyCtC;IAAD,iCAAC;;CAAA;;ACtCM;IAAA;KAAiC;IAA3B,uBAAuB;QALnC,QAAQ,CAAC;YACN,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,CAAC,0BAA0B,CAAC;YACrC,YAAY,EAAE,CAAC,0BAA0B,CAAC;SAC7C,CAAC;OACW,uBAAuB,CAAI;IAAD,8BAAC;CAAA;;;;"}